name: build and test
on:
  workflow_dispatch:
  pull_request:
    types: [opened]
    branches:
      - 'develop'
      - 'release'
env:
  SLACK_CODE_REVIEW_NOTIFICATION_URL: ${{ secrets.SLACK_CODE_REVIEW_NOTIFICATION_URL }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Npm Install
        run: npm install
      - name: Npm Build
        run: npm run build
  success-notification:
    runs-on: ubuntu-latest
    needs: [ build ]
    if: success()
    steps:
      - name: Get PR Info
        run: |
          PR_TITLE=$(jq -r '.pull_request.title' < $GITHUB_EVENT_PATH)
          PR_BODY=$(jq -r '.pull_request.body' < $GITHUB_EVENT_PATH)
          PR_USER=$(jq -r '.pull_request.user.login' < $GITHUB_EVENT_PATH)
          PR_ASSIGNEES=$(jq -r '[.pull_request.assignees[].login] | join(", ")' < $GITHUB_EVENT_PATH)
          PR_REVIEWERS=$(jq -r '[.pull_request.requested_reviewers[].login] | join(", ")' < $GITHUB_EVENT_PATH)
          echo "PR_TITLE=$PR_TITLE" >> $GITHUB_ENV
          echo "PR_BODY=$PR_BODY" >> $GITHUB_ENV
          echo "PR_USER=$PR_USER" >> $GITHUB_ENV
          echo "PR_ASSIGNEES=$PR_ASSIGNEES" >> $GITHUB_ENV
          echo "PR_REVIEWERS=$PR_REVIEWERS" >> $GITHUB_ENV
      - name: Send Successful deployment message to slack channel
        run: |
          curl -X POST --data-urlencode "payload={\"channel\": \"#builzer-코드리뷰
          \", \"username\": \"Pull requests 알림\", \"text\": \"[모듈]: builzer-frontend\n[제목]: ${{ env.PR_TITLE }}\n[내용]: \n${{ env.PR_BODY }}\n[요청자]: ${{ env.PR_ASSIGNEES }}\n[담당자]: ${{ env.PR_REVIEWERS }}\"}" ${{ env.SLACK_CODE_REVIEW_NOTIFICATION_URL }}
  failure-notification:
    runs-on: ubuntu-latest
    needs: [ build ]
    if: failure()
    steps:
      - name: Get PR Info
        run: |
          PR_TITLE=$(jq -r '.pull_request.title' < $GITHUB_EVENT_PATH)
          PR_ASSIGNEES=$(jq -r '[.pull_request.assignees[].login] | join(", ")' < $GITHUB_EVENT_PATH)
          echo "PR_TITLE=$PR_TITLE" >> $GITHUB_ENV
          echo "PR_ASSIGNEES=$PR_ASSIGNEES" >> $GITHUB_ENV
      - name: Send Failure deployment message to slack channel
        run: |
          curl -X POST --data-urlencode "payload={\"channel\": \"#builzer-코드리뷰
          \", \"username\": \"Pull requests 실패 알림\", \"text\": \"[모듈]: builzer-frontend\n[제목]: ${{ env.PR_TITLE }}\n[요청자]: ${{ env.PR_ASSIGNEES }}\n[메시지]: 빌드, 테스트가 실패하였습니다.\"}" ${{ env.SLACK_CODE_REVIEW_NOTIFICATION_URL }}